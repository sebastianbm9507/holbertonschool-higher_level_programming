The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an 0-add_integer text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:
Test with positive numbers

    >>> add_integer(6,2)
    8
    >>> add_integer(2)
    100
    >>> add_integer(0,)
    98

Test with negative numbers

    >>> add_integer(-3, -2)
    -5
    >>> add_integer(-3,2)
    -1
    >>> add_integer(2,-3)
    -1

Test with float numbers positive and negative

    >>> add_integer(2.4,3)
    5
    >>> add_integer(3,2.3)
    5
    >>> add_integer(-5.1,3)
    -2
    >>> add_integer(3,-5.12)
    -2

Raises:

    >>> add_integer(4,'h')
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>> add_integer('h',2)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer('h','4')
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer([3,2],[4,4])
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer(1,[4,4])
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>> add_integer(False,True)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer(2,False)
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>> add_integer('.','.')
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(3.7, 1.45, 3)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'
